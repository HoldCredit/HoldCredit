# -*- coding: utf-8 -*-
import sys
import numpy as np
import pandas as pd
import joblib
import os

os.chdir('C:\dev\HoldCredit\py')

# 모델과 스케일러 로드
cb_rf = joblib.load('CB_GradientBoosting_model.pkl')
cb_scaler = joblib.load('CB_GradientBoosting_scaler.pkl')

# 입력 데이터 (스프링에서 넘겨주는 배열)
inputs = sys.argv[1:]

# 컬럼 리스트 (순서가 중요합니다)
columns = ['PRE_LMT','PRE_RT','GOODS_CD','INA_CD','AD_NO','LIV_ADD','RES_ADD','ADD_YN','SALE_TRM','RRC_CD','HAC_CD','B12000100','B22000200','B22000300','B32000100','BS0000164','BS0000772','BS0000930','C00000001','C00000023','C00000035','C00000052','C00000090','C00000093','C11061000','CA1200001','CA2400001','CA3600001','CE0000004','CF0100902','CF0100906','CF0100919','CF0100932','CF0300611','CF0300902','CF0331605','CF0332605','CF0600157','CF0600611','CF0600615','CF0600913','CF0600943','CF0631605','CF0632605','CF1200619','CF1200620','CF1200622','CF1200902','CF1200946','CF1231601','CF1231602','CF1231604','CF1231605','CF1232601','CF1232602','CF1232604','CF1232605','CF9900907','CL0631905','CL0631906','CS0000050','DQ0052001','DQ0152001','DQ0352001','DQ0352601','DQ0652001','DQ0652601','DQ1200001','DQ1251001','DQ1251011','DQ1252001','DQ1252004','DQ1252601','G00000001','G00010001','G00060001','GU0024001','IDT000003','KC1000001','KC1000025','KC5000016','KC5000017','KC5000019','KC5000020','KC5000021','L00000001','L00000002','L00000004','L00060002','L00080002','L00140002','L00990004','L00990005','L21170900','L21171100','L21200200','L21211300','L22000500','L22000900','L22001700','L22001800','L22001900','L22002000','L22002005','L22002011','L22002012','L22002013','L22002014','L22002700','L22002800','L22002900','L22003000','L22003100','L22003200','L23001901','L23001909','L23001911','L23001916','L23003700','L2A000105','LA0000038','LA0000039','LA0000040','LA0052601','LA0052602','LA0099212','LA0099227','LA1200017','LA1200018','LA1200019','LA1200020','LA1200021','LA1200022','LA6000005','LC0000001','LC0000002','LC0000021','LC0000101','LC0000202','LC0000607','LC0017001','LC0017201','LC0021001','LC0021010','LC0021102','LC0021103','LC0021602','LC0025002','LC0025018','LC0025202','LC0027001','LC0027002','LC0027010','LC0027021','LC0027023','LC0099020','LC0099024','LC0099045','LC0099046','LC0099047','LC0099101','LC0099103','LC0099901','LC1200102','LC1221101','LC2421801','LE0000213','LH0000013','LH0000147','LH0000151','LH0000154','LRZ021201','LS0000067','LS0000124','LS0000125','LS0000176','LS0000180','LS0000574','LS0000864','LS0000866','LS0000892','LS0001144','LS0001196','LS0001197','LU0024001','LU0024101','LU0024201','LU0624001','P27000100','P3O000500','P3O003900','P44003901','PE0000025','PE0000026','PH0000092','PS0000090','PS0000279','PS0000282','PS0000500','PS0001894','PS0001895','PS0001896','PS0001897'] # 다른 컬럼들 추가

# DataFrame으로 변환
input_data = pd.DataFrame([inputs], columns=columns)

# 원-핫 인코딩 수행
input_data = pd.get_dummies(input_data, columns=['AD_NO', 'LIV_ADD', 'RES_ADD', 'ADD_YN'])

# 원-핫 인코딩 후 누락된 컬럼을 0으로 채워 넣는다 (학습 데이터에 있었던 모든 컬럼이 있어야 함)
model_columns = ['PRE_LMT','PRE_RT','GOODS_CD','INA_CD','SALE_TRM','RRC_CD','HAC_CD','B12000100','B22000200','B22000300','B32000100','BS0000164','BS0000772','BS0000930','C00000001','C00000023','C00000035','C00000052','C00000090','C00000093','C11061000','CA1200001','CA2400001','CA3600001','CE0000004','CF0100902','CF0100906','CF0100919','CF0100932','CF0300611','CF0300902','CF0331605','CF0332605','CF0600157','CF0600611','CF0600615','CF0600913','CF0600943','CF0631605','CF0632605','CF1200619','CF1200620','CF1200622','CF1200902','CF1200946','CF1231601','CF1231602','CF1231604','CF1231605','CF1232601','CF1232602','CF1232604','CF1232605','CF9900907','CL0631905','CL0631906','CS0000050','DQ0052001','DQ0152001','DQ0352001','DQ0352601','DQ0652001','DQ0652601','DQ1200001','DQ1251001','DQ1251011','DQ1252001','DQ1252004','DQ1252601','G00000001','G00010001','G00060001','GU0024001','IDT000003','KC1000001','KC1000025','KC5000016','KC5000017','KC5000019','KC5000020','KC5000021','L00000001','L00000002','L00000004','L00060002','L00080002','L00140002','L00990004','L00990005','L21170900','L21171100','L21200200','L21211300','L22000500','L22000900','L22001700','L22001800','L22001900','L22002000','L22002005','L22002011','L22002012','L22002013','L22002014','L22002700','L22002800','L22002900','L22003000','L22003100','L22003200','L23001901','L23001909','L23001911','L23001916','L23003700','L2A000105','LA0000038','LA0000039','LA0000040','LA0052601','LA0052602','LA0099212','LA0099227','LA1200017','LA1200018','LA1200019','LA1200020','LA1200021','LA1200022','LA6000005','LC0000001','LC0000002','LC0000021','LC0000101','LC0000202','LC0000607','LC0017001','LC0017201','LC0021001','LC0021010','LC0021102','LC0021103','LC0021602','LC0025002','LC0025018','LC0025202','LC0027001','LC0027002','LC0027010','LC0027021','LC0027023','LC0099020','LC0099024','LC0099045','LC0099046','LC0099047','LC0099101','LC0099103','LC0099901','LC1200102','LC1221101','LC2421801','LE0000213','LH0000013','LH0000147','LH0000151','LH0000154','LRZ021201','LS0000067','LS0000124','LS0000125','LS0000176','LS0000180','LS0000574','LS0000864','LS0000866','LS0000892','LS0001144','LS0001196','LS0001197','LU0024001','LU0024101','LU0024201','LU0624001','P27000100','P3O000500','P3O003900','P44003901','PE0000025','PE0000026','PH0000092','PS0000090','PS0000279','PS0000282','PS0000500','PS0001894','PS0001895','PS0001896','PS0001897','AD_NO_AD0002','AD_NO_AD0003','AD_NO_AD0005','AD_NO_AD0006','AD_NO_AD0008','AD_NO_AD0009','AD_NO_AD0010','AD_NO_AD0011','LIV_ADD_강원','LIV_ADD_경기','LIV_ADD_경남','LIV_ADD_경북','LIV_ADD_광주','LIV_ADD_대구','LIV_ADD_대전','LIV_ADD_부산','LIV_ADD_서울','LIV_ADD_세종','LIV_ADD_울산','LIV_ADD_인천','LIV_ADD_전남','LIV_ADD_전라','LIV_ADD_전북','LIV_ADD_제주','LIV_ADD_충남','LIV_ADD_충북','LIV_ADD_충청','RES_ADD_강원','RES_ADD_경기','RES_ADD_경남','RES_ADD_경북','RES_ADD_광주','RES_ADD_대구','RES_ADD_대전','RES_ADD_부산','RES_ADD_서울','RES_ADD_세종','RES_ADD_울산','RES_ADD_인천','RES_ADD_전남','RES_ADD_전라','RES_ADD_전북','RES_ADD_제주','RES_ADD_충남','RES_ADD_충북','RES_ADD_충청','ADD_YN_N','ADD_YN_Y']
for col in model_columns:
    if col not in input_data.columns:
        input_data[col] = 0

# 순서 맞추기
input_data = input_data[model_columns]

# 스케일링
input_data = cb_scaler.transform(input_data)

# 예측
CB_prediction = cb_rf.predict(input_data)

# 예측 결과 출력
print(CB_prediction[0])

# 두 번째 모델 로드
overdue_model = joblib.load('Overdue_GradientBoosting_model.pkl')
overdue_scaler = joblib.load('Overdue_GradientBoosting_scaler.pkl')

inputs.insert(-1, CB_prediction) #위치
overdue_input_columns = ['PRE_LMT','PRE_RT','GOODS_CD','INA_CD','AD_NO','LIV_ADD','RES_ADD','ADD_YN','SALE_TRM','RRC_CD','HAC_CD','B12000100','B22000200','B22000300','B32000100','BS0000164','BS0000772','BS0000930','C00000001','C00000023','C00000035','C00000052','C00000090','C00000093','C11061000','CA1200001','CA2400001','CA3600001','CE0000004','CF0100902','CF0100906','CF0100919','CF0100932','CF0300611','CF0300902','CF0331605','CF0332605','CF0600157','CF0600611','CF0600615','CF0600913','CF0600943','CF0631605','CF0632605','CF1200619','CF1200620','CF1200622','CF1200902','CF1200946','CF1231601','CF1231602','CF1231604','CF1231605','CF1232601','CF1232602','CF1232604','CF1232605','CF9900907','CL0631905','CL0631906','CS0000050','DQ0052001','DQ0152001','DQ0352001','DQ0352601','DQ0652001','DQ0652601','DQ1200001','DQ1251001','DQ1251011','DQ1252001','DQ1252004','DQ1252601','G00000001','G00010001','G00060001','GU0024001','IDT000003','KC1000001','KC1000025','KC5000016','KC5000017','KC5000019','KC5000020','KC5000021','L00000001','L00000002','L00000004','L00060002','L00080002','L00140002','L00990004','L00990005','L21170900','L21171100','L21200200','L21211300','L22000500','L22000900','L22001700','L22001800','L22001900','L22002000','L22002005','L22002011','L22002012','L22002013','L22002014','L22002700','L22002800','L22002900','L22003000','L22003100','L22003200','L23001901','L23001909','L23001911','L23001916','L23003700','L2A000105','LA0000038','LA0000039','LA0000040','LA0052601','LA0052602','LA0099212','LA0099227','LA1200017','LA1200018','LA1200019','LA1200020','LA1200021','LA1200022','LA6000005','LC0000001','LC0000002','LC0000021','LC0000101','LC0000202','LC0000607','LC0017001','LC0017201','LC0021001','LC0021010','LC0021102','LC0021103','LC0021602','LC0025002','LC0025018','LC0025202','LC0027001','LC0027002','LC0027010','LC0027021','LC0027023','LC0099020','LC0099024','LC0099045','LC0099046','LC0099047','LC0099101','LC0099103','LC0099901','LC1200102','LC1221101','LC2421801','LE0000213','LH0000013','LH0000147','LH0000151','LH0000154','LRZ021201','LS0000067','LS0000124','LS0000125','LS0000176','LS0000180','LS0000574','LS0000864','LS0000866','LS0000892','LS0001144','LS0001196','LS0001197','LU0024001','LU0024101','LU0024201','LU0624001','P27000100','P3O000500','P3O003900','P44003901','PE0000025','PE0000026','PH0000092','PS0000090','PS0000279','PS0000282','PS0000500','PS0001894','PS0001895','PS0001896','PS0001897','CB']
input_data = pd.DataFrame([inputs], columns=overdue_input_columns)
input_data = pd.get_dummies(input_data, columns=['AD_NO', 'LIV_ADD', 'RES_ADD', 'ADD_YN'])

overdue_model_columns = ['PRE_LMT','PRE_RT','GOODS_CD','INA_CD','SALE_TRM','RRC_CD','HAC_CD','B12000100','B22000200','B22000300','B32000100','BS0000164','BS0000772','BS0000930','C00000001','C00000023','C00000035','C00000052','C00000090','C00000093','C11061000','CA1200001','CA2400001','CA3600001','CE0000004','CF0100902','CF0100906','CF0100919','CF0100932','CF0300611','CF0300902','CF0331605','CF0332605','CF0600157','CF0600611','CF0600615','CF0600913','CF0600943','CF0631605','CF0632605','CF1200619','CF1200620','CF1200622','CF1200902','CF1200946','CF1231601','CF1231602','CF1231604','CF1231605','CF1232601','CF1232602','CF1232604','CF1232605','CF9900907','CL0631905','CL0631906','CS0000050','DQ0052001','DQ0152001','DQ0352001','DQ0352601','DQ0652001','DQ0652601','DQ1200001','DQ1251001','DQ1251011','DQ1252001','DQ1252004','DQ1252601','G00000001','G00010001','G00060001','GU0024001','IDT000003','KC1000001','KC1000025','KC5000016','KC5000017','KC5000019','KC5000020','KC5000021','L00000001','L00000002','L00000004','L00060002','L00080002','L00140002','L00990004','L00990005','L21170900','L21171100','L21200200','L21211300','L22000500','L22000900','L22001700','L22001800','L22001900','L22002000','L22002005','L22002011','L22002012','L22002013','L22002014','L22002700','L22002800','L22002900','L22003000','L22003100','L22003200','L23001901','L23001909','L23001911','L23001916','L23003700','L2A000105','LA0000038','LA0000039','LA0000040','LA0052601','LA0052602','LA0099212','LA0099227','LA1200017','LA1200018','LA1200019','LA1200020','LA1200021','LA1200022','LA6000005','LC0000001','LC0000002','LC0000021','LC0000101','LC0000202','LC0000607','LC0017001','LC0017201','LC0021001','LC0021010','LC0021102','LC0021103','LC0021602','LC0025002','LC0025018','LC0025202','LC0027001','LC0027002','LC0027010','LC0027021','LC0027023','LC0099020','LC0099024','LC0099045','LC0099046','LC0099047','LC0099101','LC0099103','LC0099901','LC1200102','LC1221101','LC2421801','LE0000213','LH0000013','LH0000147','LH0000151','LH0000154','LRZ021201','LS0000067','LS0000124','LS0000125','LS0000176','LS0000180','LS0000574','LS0000864','LS0000866','LS0000892','LS0001144','LS0001196','LS0001197','LU0024001','LU0024101','LU0024201','LU0624001','P27000100','P3O000500','P3O003900','P44003901','PE0000025','PE0000026','PH0000092','PS0000090','PS0000279','PS0000282','PS0000500','PS0001894','PS0001895','PS0001896','PS0001897', 'CB','AD_NO_AD0002','AD_NO_AD0003','AD_NO_AD0005','AD_NO_AD0006','AD_NO_AD0008','AD_NO_AD0009','AD_NO_AD0010','AD_NO_AD0011','LIV_ADD_강원','LIV_ADD_경기','LIV_ADD_경남','LIV_ADD_경북','LIV_ADD_광주','LIV_ADD_대구','LIV_ADD_대전','LIV_ADD_부산','LIV_ADD_서울','LIV_ADD_세종','LIV_ADD_울산','LIV_ADD_인천','LIV_ADD_전남','LIV_ADD_전라','LIV_ADD_전북','LIV_ADD_제주','LIV_ADD_충남','LIV_ADD_충북','LIV_ADD_충청','RES_ADD_강원','RES_ADD_경기','RES_ADD_경남','RES_ADD_경북','RES_ADD_광주','RES_ADD_대구','RES_ADD_대전','RES_ADD_부산','RES_ADD_서울','RES_ADD_세종','RES_ADD_울산','RES_ADD_인천','RES_ADD_전남','RES_ADD_전라','RES_ADD_전북','RES_ADD_제주','RES_ADD_충남','RES_ADD_충북','RES_ADD_충청','ADD_YN_N','ADD_YN_Y']
for col in overdue_model_columns:
    if col not in input_data.columns:
        input_data[col] = 0

input_data = input_data[overdue_model_columns]

input_data = overdue_scaler.transform(input_data)

overdue_prediction = overdue_model.predict(input_data)

print(overdue_prediction[0])
